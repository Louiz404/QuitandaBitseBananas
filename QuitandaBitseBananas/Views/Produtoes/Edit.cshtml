@model QuitandaBitseBananas.Models.Produto

@{
    ViewData["Title"] = "Edit";
}

<h1>Edit</h1>

<h4>Produto</h4>
<hr />
<div class="row">
    <div class="col-md-4">
        <form asp-action="Edit">
            <div asp-validation-summary="ModelOnly" class="text-danger"></div>
            <input type="hidden" asp-for="Id" />

            <!-- Campo Nome -->
            <div class="form-group">
                <label asp-for="Name" class="control-label"></label>
                <input asp-for="Name" class="form-control" />
                <span asp-validation-for="Name" class="text-danger"></span>
            </div>

            <!-- Campo Preço -->
            <div class="form-group">
                <label asp-for="Preco" class="control-label"></label>
                <input asp-for="Preco" class="form-control" id="precoInput" />
                <span asp-validation-for="Preco" class="text-danger"></span>
            </div>

            <!-- Campo Unidade -->
            <div class="form-group">
                <label asp-for="Unidade" class="control-label"></label>
                <select asp-for="Unidade" class="form-control" asp-items="ViewBag.UnidadesMedida">
                </select>
                <span asp-validation-for="Unidade" class="text-danger"></span>
            </div>

            <!-- Novo Campo Quantidade -->
            <div class="form-group">
                <label asp-for="Quantidade" class="control-label"></label>
                <input asp-for="Quantidade" class="form-control" type="number" min="0" />
                <span asp-validation-for="Quantidade" class="text-danger"></span>
            </div>

            <!-- Botão de Submit -->
            <div class="form-group">
                <input type="submit" value="Save" class="btn btn-primary" />
            </div>
        </form>
    </div>
</div>

<div>
    <a asp-action="Index">Back to List</a>
</div>

@section Scripts {
    @{
        await Html.RenderPartialAsync("_ValidationScriptsPartial");
    }
    <script src="~/js/CorecaoJquery.js"></script>
    <script>
        $(document).ready(function () {
            // Permitir apenas números, ponto ou vírgula no campo Preço
            $('#precoInput').on('input', function () {
                // Substitui todas as vírgulas por pontos
                this.value = this.value.replace(',', '.');

                // Remove tudo que não for número ou ponto
                this.value = this.value.replace(/[^0-9.]/g, '');

                // Certifica que apenas um ponto pode ser digitado
                var value = this.value;
                var parts = value.split('.');
                if (parts.length > 2) {
                    this.value = parts[0] + '.' + parts.slice(1).join('');
                }
            });

            // Previne que o usuário use vírgula ou ponto múltiplos no campo Preço
            $('#precoInput').on('keydown', function (event) {
                if (event.key === ',' || event.key === '.') {
                    if (this.value.includes(',')) {
                        event.preventDefault();
                    }
                }
            });
        });
    </script>
}
